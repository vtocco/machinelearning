# -*- coding: utf-8 -*-
"""Stock Price Moving Averages.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16oPGoavs6InCFSjChv-v4pEbA5wqdFUE
"""

import numpy as np
import pandas as pd
import sklearn
import matplotlib.pyplot as plt

from sklearn.svm import SVR

# 3 different regression models we are going to use for stock prediction
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Ridge
from sklearn.linear_model import Lasso

# Install yahoo finance library which allows us to download the data easily
!pip install yfinance --upgrade --no-cache-dir

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/gdrive',force_remount=True)
# %cd "/gdrive/My Drive/Data"

from pandas_datareader import data as pdr
import fix_yahoo_finance as yf
yf.pdr_override()
df_full = pdr.get_data_yahoo("AXP", start="2018-01-01").reset_index()
df_full.to_csv('AXP.csv',index=False)
df_full.head(10)

# df_full = pd.read_csv('AXP.csv')
# print(df_full)

# Generate the moving average with the adjusted closing price
adj_close = df_full['Adj Close']
moving_avg = adj_close.rolling(window=100).mean()

# Try to plot it out
from matplotlib import style

fig = plt.figure(figsize=(8,7))

style.use('ggplot')
adj_close.plot(label='AXP')
moving_avg.plot(label='Moving Average')
plt.legend(loc='lower right')

# lets plot our returns